<% model = queryset.model %>

<% inclusion_filters = queryset.inclusion_filters %>
<% has_inclusion_filters = inclusion_filters.length.positive? %>

<% exclusion_filters = queryset.exclusion_filters %>
<% has_exclusion_filters = exclusion_filters.length.positive? %>

<% has_distinct = queryset.has_distinct %>

<% lock_type = queryset.lock_type %>
<% projection = queryset.projection %>
<% aggregations = queryset.aggregations %>

SELECT
  <% if lock_type %>
    <%= lock_type %>
  <% end %>
  <% if has_distinct %>
    DISTINCT
  <% end %>

  <% if aggregations.length > 0 %>
    <% aggregations.each do |aggregation| %>
      <%= aggregation.sql_select %>
    <% end %>
  <% else %>
    <% if projection %>
      <%# FIXME: projection should be a proper class extending ForeignSelection %>
      <% projection.each_with_index do |projected_field, projected_field_index| %>
        <% projected_field_alias = nil %>
        <% if projected_field.class == Array %>
          <% projected_field_alias = projected_field[1] %>
          <% projected_field = projected_field[0] %>
        <% end %>
        <% last_one = projected_field_index == projection.length - 1 %>
        <% projection_selection = Selection.factory(model, projected_field, '_') %>
        <% if projection_selection.class == ForeignSelection %>
          <%= projection_selection.left_joins[-1].alias %>.<%= projection_selection.selected_field %>
        <% else %>
          <%= model.table_name %>.<%= projected_field %>
        <% end %>
        <% if projected_field_alias %>AS <%= projected_field_alias %><% end %>
        <% unless last_one %>,<% end %>
      <% end %>
    <% else %>
      <%= model.table_name %>.*
    <% end %>
  <% end %>

FROM <%= model.table_name %>

<%= queryset._sql_left_joins %>

<% if has_inclusion_filters || has_exclusion_filters  %>
WHERE (
  <% if has_inclusion_filters %>
  (
    <% inclusion_filters.each_with_index do |condition, condition_index| %>
      <% last_inclusion_filter = condition_index == inclusion_filters.length - 1 %>
      (
        1=1
        <% if condition.class == Array %>
          AND ( 1=0
            <% condition.each do |disjunction| %>
              OR <%= disjunction.sql_where_condition %>
            <% end %>
          )
        <% else %>
          AND (<%= condition.sql_where_condition %>)
        <% end %>
      )
      <% unless last_inclusion_filter %>
      AND
      <% end %>
    <% end %>
  )
  <% end %>

  <% if has_inclusion_filters && has_exclusion_filters %>
    AND
  <% end %>

  <% if has_exclusion_filters %>
  ( NOT (
    <% exclusion_filters.each_with_index do |condition, condition_index| %>
      <% last_exclusion_filter = condition_index == exclusion_filters.length - 1 %>
      (
        1=1
        <% if condition.class == Array %>
          AND ( 1=0
          <% condition.each do |disjunction| %>
            OR <%= disjunction.sql_where_condition %>
          <% end %>
          )
        <% else %>
          AND (<%= condition.sql_where_condition %>)
        <% end %>
      )
      <% unless last_exclusion_filter %>
      AND
      <% end %>
    <% end %>
  ) )
<% end %>
)
<% end %>
<%# Order the results %>
<%= render.('select/order_by.sql.erb', {queryset: queryset}) %>

<%# Limit the results (only MySQL, MariaDB and PostgreSQL) %>
<%= render.('select/limit.sql.erb', {queryset: queryset}) %>
